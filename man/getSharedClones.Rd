% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ApotcClonalNetwork.R
\name{getSharedClones}
\alias{getSharedClones}
\title{Compute a list of clonotypes that are shared between seurat clusters}
\usage{
getSharedClones(
  seurat_obj,
  reduction_base = "umap",
  clonecall = "strict",
  ...,
  extra_filter = NULL,
  run_id = NULL,
  clonesize_range = c(1L, Inf),
  only_cluster = NULL,
  only_between = NULL
)
}
\arguments{
\item{seurat_obj}{Seurat object with one or more dimension reductions and
already have been integrated with a TCR/BCR library with
\code{scRepertoire::combineExpression}.}

\item{reduction_base}{character. The seurat reduction to base the clonal
expansion plotting on. Defaults to \code{'umap'} but can be any reduction present
within the reductions slot of the input seurat object, including custom ones.
If `'pca'``, the cluster coordinates will be based on PC1 and PC2.
However, generally APackOfTheClones is used for displaying UMAP and
occasionally t-SNE versions to intuitively highlight clonal expansion.}

\item{clonecall}{character. The column name in the seurat object metadata to
use. See \code{scRepertoire} documentation for more information about this
parameter that is central to both packages.}

\item{...}{additional "subsetting" keyword arguments indicating the rows
corresponding to elements in the seurat object metadata that should be
filtered by. E.g., \code{seurat_clusters = c(1, 9, 10)} will filter the cells to
those in the \code{seurat_clusters} column with any of the values 1, 9, and 10.
Unfortunately, column names in the seurat object metadata cannot
conflict with the keyword arguments. \emph{\strong{MAJOR NOTE}} if any subsetting
keyword arguments are a \emph{prefix} of any preceding argument names (e.g. a
column named \code{reduction} is a prefix of the \code{reduction_base} argument)
R will interpret it as the same argument unless \emph{both} arguments
are named. Additionally, this means any subsequent arguments \emph{must} be named.}

\item{extra_filter}{character. An additional string that should be formatted
\emph{exactly} like a statement one would pass into \link[dplyr:filter]{dplyr::filter} that does
\emph{additional} filtering to cells in the seurat object - on top of the other
keyword arguments - based on the metadata. This means that it will be
logically AND'ed with any keyword argument filters. This is a more flexible
alternative / addition to the filtering keyword arguments. For example, if
one wanted to filter by the length of the amino acid sequence of TCRs, one
could pass in something like \code{extra_filter = "nchar(CTaa) - 1 > 10"}. When
involving characters, ensure to enclose with single quotes.}

\item{run_id}{character. This will be the ID associated with the data of a
run, and will be used by other important functions like \link{APOTCPlot} and
\link{AdjustAPOTC}. Defaults to \code{NULL}, in which case the ID will be generated
in the following format:

\verb{reduction_base;clonecall;keyword_arguments;extra_filter}

where if keyword arguments and extra_filter are underscore characters if
there was no input for the \code{...} and \code{extra_filter} parameters.}

\item{clonesize_range}{integer vector of length 2. Sets the range of clone
sizes to keep when counting shared clones. The first element is the lower
bound (inclusive), and the second element is the upper bound (inclusive).
Defaults to \code{c(1L, Inf)}.}

\item{only_cluster}{integer vector indicating which clusters to keep when
counting shared clones. Note that this cannot conflict with
\code{exclude_cluster}.}

\item{exclude_cluster}{integer vector indicating which clusters to exclude
when counting shared clones. Note that this cannot conflict with
\code{only_cluster}.}
}
\value{
a named list where each name is a clonotype, each element is a
numeric indicating which seurat cluster(s) its in, in no particular order.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

This function is a convenience function for users to get a list of clonotypes
which are shared between seurat clusters. If \code{run_id} is inputted, then the
function will attempt to get the shared clonotypes from the corresponding
APackOfTheClones run generated from \link{RunAPOTC}. Otherwise, it will use the
filtering / subsetting parameters to generate the shared clones by
internally running \link{RunAPOTC} with the same parameters and returning the
shared clones.
}
\examples{
data("combined_pbmc")

getSharedClones(combined_pbmc)

getSharedClones(
    combined_pbmc,
    orig.ident = c("P17B", "P18B"), # this is a named subsetting parameter
    clonecall = "aa"
)

# doing a run and then getting the clones works too
combined_pbmc <- RunAPOTC(combined_pbmc, run_id = "run1", verbose = FALSE)
getSharedClones(combined_pbmc, run_id = "run1")

}
