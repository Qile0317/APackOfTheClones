% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integration.R
\name{combineSeuratExpression}
\alias{combineSeuratExpression}
\title{Add scRepertoire-compatible clonotype information to a seurat object}
\usage{
combineSeuratExpression(
  contigs,
  seurat_obj,
  cloneCall = "strict",
  chain = "both",
  filterNA = FALSE,
  cloneTypes = c(Rare = 1e-04, Small = 0.001, Medium = 0.01, Large = 0.1, Hyperexpanded =
    1)
)
}
\arguments{
\item{contigs}{The product of `scRepertoire::CombineTCR()`,
`scRepertoire::CombineBCR()` or a list of both. (see scRepertoire's vignette)}

\item{seurat_obj}{The seurat object to attach the contigs to}

\item{cloneCall}{character. How to call the clonotype - VDJC gene (gene),
CDR3 nucleotide (nt) CDR3 amino acid (aa), or VDJC gene + CDR3 nucleotide
(strict).}

\item{chain}{character. Indicate if both or a specific chain should be used -
e.g. "both", "TRA", "TRG", "IGH", "IGL"}

\item{filterNA}{logical. Method to subset seurat object of barcodes without
clonotype information}

\item{cloneTypes}{named numeric. The bins for the grouping based on frequency}
}
\value{
The modified seurat object with the contig information attached, and a seurat
command slot with the command call information
}
\description{
This is a modified version of `scRepertoire::combineExpression`, which adds
the immune receptor information to a Seurat object's meta data. This function
also calculates the combined clonotype frequencies.

Importantly, before using this function, ensure the barcodes of the seurat
object match the barcodes in the output of the
`scRepertoire::combinedContig()` call. Check `AddSampleBarcode()`
to change the prefixes of the Seurat object. If combining more than one
immune receptor type, barcodes with both receptors will be removed during the
combination process.
}
\details{
This function is a sort of "subset" of the original `scRepertoire` function
that combines and processes the clonotype data so that it can be used by
`APackOfTheClones` further downstream. The modified output seurat object
should be completely compatible to be used with other `scRepertoire`
functions. `scRepertoire::combineExpression` can also be ran again on the
modified seurat object and it shouldn't overwrite any of the existing data.
}
\examples{
#unfinished

}
